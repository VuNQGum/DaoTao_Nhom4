name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      #Docker config
      DOCKER_USER: ${{secrets.DOCKER_USER}} # name of Docker Hub ID
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      IMAGE_NAME: daotao
      IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
      AMAZON_S3_BUCKET: ${{secrets.AMAZON_S3_BUCKET}}
      AMAZON_S3_ACCESSKEY: ${{secrets.AMAZON_S3_ACCESSKEY}}
      AMAZON_S3_PRIVATEKEY: ${{secrets.AMAZON_S3_PRIVATEKEY}}
      CLUSTER_NAME: aks-cluster
      RESOURSE_GROUP: rg-aks-cluster

    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Replace variables in Dockerfile
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["src/main/resources/application.yml"]'
        tokenPrefix: __ # optional, default is #{
        tokenSuffix: __ # optional, default is }#
      env:
        AMAZON_S3_BUCKET: ${{env.AMAZON_S3_BUCKET}}
        AMAZON_S3_ACCESSKEY: ${{env.AMAZON_S3_ACCESSKEY}}
        AMAZON_S3_PRIVATEKEY: ${{env.AMAZON_S3_PRIVATEKEY}}

    - name: Build and push the Docker image
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: |
          ${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      DOCKER_USER: ${{secrets.DOCKER_USER}} # name of Docker Hub ID
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      IMAGE_NAME: daotao
      IMAGE_TAG: ${{ github.run_number }} # $GITHUB_RUN_NUMBER
      #Amazon s3 config
      AMAZON_S3_BUCKET: ${{secrets.AMAZON_S3_BUCKET}}
      AMAZON_S3_ACCESSKEY: ${{secrets.AMAZON_S3_ACCESSKEY}}
      AMAZON_S3_PRIVATEKEY: ${{secrets.AMAZON_S3_PRIVATEKEY}}
      
      CLUSTER_NAME: aks-cluster
      RESOURSE_GROUP: rg-aks-cluster
    steps:
    - uses: actions/checkout@v3

    - name: Replace variables in kubernetes yaml file
      uses: cschleiden/replace-tokens@v1
      with:
        files: '["kubernetes/*.yaml", "docker-compose.yaml"]'
        tokenPrefix: __ # optional, default is #{
        tokenSuffix: __ # optional, default is }#
      env:
        DOCKER_REPOSITORY: ${{ env.DOCKER_USER }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
        AMAZON_S3_BUCKET: ${{env.AMAZON_S3_BUCKET}}
        AMAZON_S3_ACCESSKEY: ${{env.AMAZON_S3_ACCESSKEY}}
        AMAZON_S3_PRIVATEKEY: ${{env.AMAZON_S3_PRIVATEKEY}}

    - name: Copy config file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        # source: "kubernetes/*.yaml, docker-compose.yaml"
        source: "docker-compose.yaml"
        target: "chuyende"

    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_KEY }}
        script: |
          cd chuyende
          ls
          docker-compose up
          docker container ls
